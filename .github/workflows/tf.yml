# .github/workflows/deploy-terraform.yml

name: Deploy Terraform to AWS

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  terraform:
    name: Deploy Terraform
    runs-on: ubuntu-latest

    strategy:
      matrix:
        environment: [development, production]

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0  # Adjust to your Terraform version

      # Set AWS credentials based on environment
      - name: Set AWS credentials
        if: matrix.environment == 'development'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}

      - name: Set AWS credentials
        if: matrix.environment == 'production'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}

      # Initialize Terraform
      - name: Terraform Init
        run: terraform init

      # Select the workspace based on environment
      - name: Select Terraform Workspace
        run: terraform workspace select ${{ matrix.environment }} || terraform workspace new ${{ matrix.environment }}

      # Validate the Terraform configuration
      - name: Terraform Validate
        run: terraform validate

      # Plan the Terraform deployment
      - name: Terraform Plan
        run: terraform plan -out=tfplan -input=false
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
        if: matrix.environment == 'development'

      - name: Terraform Plan for Production
        run: terraform plan -out=tfplan -input=false
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
        if: matrix.environment == 'production'

      # Apply the Terraform deployment
      - name: Terraform Apply
        if: matrix.environment == 'development'
        run: terraform apply -auto-approve tfplan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}

      - name: Terraform Apply for Production
        if: matrix.environment == 'production'
        run: terraform apply -auto-approve tfplan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
