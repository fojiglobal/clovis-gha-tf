
name: Deploy Terraform to AWS Dev

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
env: 
  AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
  AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}

jobs:
  tf-plan:
    name: tfplan
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        if: github.event_name == 'pull_request'
        uses: actions/checkout@v3

      # Step 2: Set up Terraform CLI
      - name: Setup Terraform
        if: github.event_name == 'pull_request'
        uses: hashicorp/setup-terraform@v2

      - name: Initial Terraform
        if: github.event_name == 'pull_request'
        run: terraform init

      - name: Validate Terraform Code
        if: github.event_name == 'pull_request'
        run: terraform validate

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -input=false -no-color
      
      - name: Scan Terraform Codes
        if: github.event_name == 'pull_request'
        uses: snyk/actions/iac@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        # with:
        #   args: --report
        continue-on-error: true
  
  # tf-scan:
  #   needs: tf-plan
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main' && github.event_name == 'pull_request'
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3
        
  #     # Step 2: Set up Terraform CLI
  #     - name: Setup Terraform
  #       uses: hashicorp/setup-terraform@v2

  #     - name: Scan Terraform Codes
  #       uses: snyk/actions/iac@master
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  #       # with:
  #       #   args: --report
  #       continue-on-error: true

  tf-apply:
    needs: tf-plan
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Initial Terraform
        run: terraform init

      - name: Terraform Apply
        run: echo "Terraform Apply Successfully"

    
